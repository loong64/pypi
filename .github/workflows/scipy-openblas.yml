name: build (scipy-openblas)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-24.04, PLAT: loongarch64, INTERFACE64: '0', MB_ML_VER: '_2_38', MB_ML_LIBC: manylinux }
          - { os: ubuntu-24.04, PLAT: loongarch64, INTERFACE64: '1', MB_ML_VER: '_2_38', MB_ML_LIBC: manylinux }

          - { os: ubuntu-24.04, PLAT: loongarch64, INTERFACE64: '0', MB_ML_VER: '_1_2', MB_ML_LIBC: musllinux }
          - { os: ubuntu-24.04, PLAT: loongarch64, INTERFACE64: '1', MB_ML_VER: '_1_2', MB_ML_LIBC: musllinux }

    env:
      NIGHTLY: false
      MB_ML_LIBC: ${{ matrix.MB_ML_LIBC }}
      MB_ML_VER: ${{ matrix.MB_ML_VER }}
      INTERFACE64: ${{ matrix.INTERFACE64 }}
      BUILD_DIR: ${{ github.workspace }}
      PLAT: ${{ matrix.PLAT }}
      OS-NAME: ${{ matrix.os }}

    steps:
      - name: Get Version
        run: |
          app_version=$(curl -s "https://api.github.com/repos/MacPython/openblas-libs/releases/latest" | jq -r ".tag_name")
          if [ -z "${app_version}" ] || [ "${app_version}" == "null" ]; then
            echo "Failed to get the latest version"
            exit 1
          fi

          case ${{ matrix.INTERFACE64 }} in
            0) pkg="scipy-openblas32" ;;
            1) pkg="scipy-openblas64" ;;
          esac

          if curl "https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple/${pkg}" | grep -oP '(?<=>)[^<]+\.whl' | grep -q "${app_version/v/}-.*-${{ matrix.MB_ML_LIBC }}_.*_${{ matrix.PLAT }}.whl"; then
            echo "Package ${pkg} ${app_version/v/} already exists"
            echo "BUILD=false" >> $GITHUB_ENV
            exit 0
          fi

          openblas_version=$(echo ${app_version} | awk -F. '{print $1"."$2"."$3}')
          echo "APP_VERSION=${app_version}" >> $GITHUB_ENV
          echo "OPENBLAS_COMMIT=${openblas_version}" >> $GITHUB_ENV

          echo ""
          echo "========== Build Args =========="
          echo "APP_VERSION=${app_version}"
          echo "OPENBLAS_COMMIT=${openblas_version}"

      - name: Checkout Code
        if: env.BUILD != 'false'
        uses: actions/checkout@v5
        with:
          repository: MacPython/openblas-libs
          ref: ${{ env.APP_VERSION }}
          submodules: recursive
          fetch-depth: 0

      - name: Setup QEMU
        if: env.BUILD != 'false'
        uses: docker/setup-qemu-action@v3
      
      - name: Print some Environment variable
        run: |
          echo "PLAT: ${PLAT}".
          mkdir -p patches
          wget -qO patches/0001-fix-loongarch64-musllinux-test.patch https://github.com/loong64/openblas-libs/raw/refs/heads/patch_loong64/patches/0001-fix-loongarch64-musllinux-test.patch

      - name: Build and Test wheels
        if: env.BUILD != 'false'
        uses: loong64/cibuildwheel@v3.1.4
        env:
          CIBW_ARCHS: ${{matrix.PLAT}}
          CIBW_BUILD:  "cp39-${{ matrix.MB_ML_LIBC }}_${{matrix.PLAT}}"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_LINUX: PIP_EXTRA_INDEX_URL=https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple

      - name: Check wheel
        run: |
          ls -al wheelhouse/*.whl || exit 0
          echo "upload=true" >> $GITHUB_ENV

      - name: Upload wheels
        if: env.upload == 'true'
        run: |
          pip install twine==6.0.1
          for file in wheelhouse/*.whl; do
            twine upload --repository-url https://gitlab.com/api/v4/projects/65746188/packages/pypi $file || true
          done
        env:
          TWINE_USERNAME: ${{ github.repository_owner }}
          TWINE_PASSWORD: ${{ secrets.GL_TOKEN }}