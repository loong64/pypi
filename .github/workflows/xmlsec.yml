name: build (xmlsec)

on:
  workflow_dispatch:
    inputs:
      version:
        default: 'latest'
        description: 'Package version'
        type: string
        required: true
  schedule:
    - cron: '0 15 * * *'

jobs:
  build_wheels:
    name: Build ${{ matrix.python }}-${{ matrix.build }}${{ matrix.arch }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-24.04' ]
        arch: [ 'loongarch64' ]
        build: [ 'manylinux_', 'musllinux_' ]
        python: [ 'cp38', 'cp39', 'cp310', 'cp311', 'cp312', 'cp313' ]
        include:
          - os: ubuntu-24.04
            arch: 'x86_64'
            build: 'manylinux_'
            python: '*'
          - os: ubuntu-24.04-arm
            arch: 'aarch64'
            build: 'manylinux_'
            python: '*'
          - os: ubuntu-24.04
            arch: 'ppc64le'
            build: 'manylinux_'
            python: 'cp311'
          - os: ubuntu-24.04
            arch: 's390x'
            build: 'manylinux_'
            python: 'cp311'


    steps:
      - name: Get Source Code
        run: |
          package=xmlsec
          if [ "${{ github.event_name }}" = "schedule" ]; then
            version="latest"
          else
            version=${{ github.event.inputs.version }}
          fi
          if [ "$version" = "latest" ]; then
            version=$(curl -sSL "https://pypi.org/pypi/${package}/json" | jq -r '.info.version')
          fi
          echo "Building package: ${package} version: ${version}"

          if [ ${{ matrix.arch }} = "loongarch64" ]; then
            echo "PIP_EXTRA_INDEX_URL=https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple" >> $GITHUB_ENV
          fi

          if curl "https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple/${package/./-}" | grep -oP '(?<=>)[^<]+\.whl' | grep -q "${package}-${version}-.*-${{ matrix.build }}.*_${{ matrix.arch }}.whl"; then
            echo "Package ${package} ${version} already exists"
            echo "BUILD=false" >> $GITHUB_ENV
            exit 0
          fi

          if curl -sSL https://github.com/xmlsec/python-xmlsec/raw/refs/tags/${version}/.github/workflows/wheels.yml | grep -q "PYXMLSEC_LIBXML2_VERSION"; then
              wget https://github.com/xmlsec/python-xmlsec/raw/refs/tags/${version}/.github/workflows/wheels.yml
          else
              wget https://github.com/xmlsec/python-xmlsec/raw/refs/heads/master/.github/workflows/wheels.yml
          fi
          if grep -q "PYXMLSEC_LIBXML2_VERSION" wheels.yml; then
              PYXMLSEC_LIBXML2_VERSION=$(grep PYXMLSEC_LIBXML2_VERSION wheels.yml | grep -oP '\d+\.\d+\.\d+')
              echo "PYXMLSEC_LIBXML2_VERSION: ${PYXMLSEC_LIBXML2_VERSION}"
              echo "PYXMLSEC_LIBXML2_VERSION=${PYXMLSEC_LIBXML2_VERSION}" >> $GITHUB_ENV
          fi
          if grep -q "PYXMLSEC_LIBXSLT_VERSION" wheels.yml; then
              PYXMLSEC_LIBXSLT_VERSION=$(grep PYXMLSEC_LIBXSLT_VERSION wheels.yml | grep -oP '\d+\.\d+\.\d+')
              echo "PYXMLSEC_LIBXSLT_VERSION: ${PYXMLSEC_LIBXSLT_VERSION}"
              echo "PYXMLSEC_LIBXSLT_VERSION=${PYXMLSEC_LIBXSLT_VERSION}" >> $GITHUB_ENV
          fi
          rm -f wheels.yml

          full_json=$(curl -sSL "https://pypi.org/pypi/${package}/${version}/json")
          download_url=$(echo "$full_json" | jq -r '.urls[] | select(.packagetype=="sdist").url')
          if [ -z "$download_url" ]; then
              echo "No source found for package ${package} version ${version}"
              exit 1
          fi

          wget -O - "$download_url" | tar xz --strip-components=1

      - name: Setup QEMU
        if: env.BUILD != 'false'
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        if: env.BUILD != 'false'
        uses: loong64/cibuildwheel@v2.23.2
        env:
          CIBW_ARCHS: "${{ matrix.arch }}"
          CIBW_BUILD: "${{ matrix.python }}-${{ matrix.build }}${{ matrix.arch }}"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_PASS_LINUX: PIP_EXTRA_INDEX_URL PYXMLSEC_LIBXML2_VERSION PYXMLSEC_LIBXSLT_VERSION
          CIBW_TEST_SKIP: "*"

      - name: Check wheel
        run: |
          ls -al wheelhouse/*.whl || exit 0
          echo "upload=true" >> $GITHUB_ENV

      - name: Upload wheels
        if: env.upload == 'true'
        run: |
          pip install twine==6.0.1
          for file in wheelhouse/*.whl; do
            twine upload --repository-url https://gitlab.com/api/v4/projects/65746188/packages/pypi $file || true
          done
        env:
          TWINE_USERNAME: ${{ github.repository_owner }}
          TWINE_PASSWORD: ${{ secrets.GL_TOKEN }}