name: build (google-crc32c)

on:
  workflow_dispatch:
    inputs:
      version:
        default: 'latest'
        description: 'Package version'
        type: string
        required: true
  schedule:
    - cron: '0 17 * * *'

jobs:
  build_wheels:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - manylinux_2_38_loongarch64

    name: ${{ matrix.image }}
    steps:
      - name: Get Source Code
        run: |
          package=google-crc32c
          if [ "${{ github.event_name }}" = "schedule" ]; then
            version="latest"
          else
            version=${{ github.event.inputs.version }}
          fi
          if [ "$version" = "latest" ]; then
            version=$(curl -sSL "https://pypi.org/pypi/${package}/json" | jq -r '.info.version')
          fi
          echo "Building package: ${package} version: ${version}"
          echo "PIP_EXTRA_INDEX_URL=https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple" >> $GITHUB_ENV

          check_file="google_crc32c-${version}-.*manylinux_2_38_loongarch64.whl"
          if curl "https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple/${package/./-}" | grep -oP '(?<=>)[^<]+\.whl' | grep -q "${check_file}"; then
            echo "Package ${package} ${version} already exists"
            echo "BUILD=false" >> $GITHUB_ENV
            exit 0
          fi

          echo "VERSION=v${version}" >> $GITHUB_ENV

      - name: Checkout
        if: env.BUILD != 'false'
        uses: actions/checkout@v5
        with:
          repository: googleapis/python-crc32c
          ref: ${{ env.VERSION }}

      - name: Setup QEMU
        if: env.BUILD != 'false'
        uses: docker/setup-qemu-action@v3

      - name: Build and test
        if: env.BUILD != 'false'
        env:
          DOCKER_IMAGE: ghcr.io/loong64/${{ matrix.image }}
        run: |
          mkdir wheelhouse
          git submodule update --init --recursive
          sed -i 's@BUILD_SHARED_LIBS=yes @BUILD_SHARED_LIBS=yes -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -DCMAKE_INSTALL_PREFIX:PATH=/usr @g' scripts/manylinux/build_on_centos.sh
          for pyver in 3.9 3.10 3.11 3.12 3.13; do
            docker run --rm \
              --platform linux/loong64 \
              --env BUILD_PYTHON=${pyver} \
              --env PIP_EXTRA_INDEX_URL="https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple" \
              --volume $(pwd):/var/code/python-crc32c/ \
              --interactive \
            $DOCKER_IMAGE /var/code/python-crc32c/scripts/manylinux/build_on_centos.sh
            sudo rm -f wheels/*-linux_loongarch64.whl
            sudo mv wheels/*.whl wheelhouse/
          done

      - name: Check wheel
        run: |
          ls -al wheelhouse/*.whl || exit 0
          echo "upload=true" >> $GITHUB_ENV

      - name: Upload wheels
        if: env.upload == 'true'
        run: |
          pip install twine==6.0.1
          for file in wheelhouse/*.whl; do
            twine upload --repository-url https://gitlab.com/api/v4/projects/65746188/packages/pypi $file || true
          done
        env:
          TWINE_USERNAME: ${{ github.repository_owner }}
          TWINE_PASSWORD: ${{ secrets.GL_TOKEN }}