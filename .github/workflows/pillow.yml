name: build (pillow)

on:
  workflow_dispatch:
    inputs:
      version:
        default: 'latest'
        description: 'Package version'
        type: string
        required: true
  schedule:
    - cron: '0 15 * * *'

jobs:
  build_wheels:
    name: Build ${{ matrix.arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-24.04' ]
        arch: [ 'x86_64', 'loongarch64', 'ppc64le', 's390x' ]
        build: [ "manylinux_", "musllinux_" ]
        include:
          - os: ubuntu-24.04-arm
            arch: "aarch64"
            build: "manylinux_"
          - os: ubuntu-24.04-arm
            arch: "aarch64"
            build: "musllinux_"


    steps:
      - name: Get Source Code
        run: |
          package=pillow
          if [ "${{ github.event_name }}" = "schedule" ]; then
            version="latest"
          else
            version=${{ github.event.inputs.version }}
          fi
          if [ "$version" = "latest" ]; then
            version=$(curl -sSL "https://pypi.org/pypi/${package}/json" | jq -r '.info.version')
          fi
          echo "Building package: ${package} version: ${version}"
          echo "PIP_EXTRA_INDEX_URL=https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple" >> $GITHUB_ENV

          if [ ${{ matrix.arch }} = "loongarch64" ]; then
            echo "CIBW_BEFORE_ALL_LINUX=(command -v apk && apk add tiff-dev jpeg-dev openjpeg-dev zlib-dev freetype-dev lcms2-dev libwebp-dev tcl-dev tk-dev harfbuzz-dev fribidi-dev libimagequant-dev libxcb-dev libpng-dev) && (command -v yum && yum install -y libtiff-devel libjpeg-devel openjpeg2-devel zlib-devel freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel harfbuzz-devel fribidi-devel libraqm-devel libimagequant-devel libxcb-devel)" >> $GITHUB_ENV
          fi

          check_file="${package}-${version}-.*-${{ matrix.build }}.*_${{ matrix.arch }}.whl"
          if curl "https://gitlab.com/api/v4/projects/65746188/packages/pypi/simple/${package/./-}" | grep -oP '(?<=>)[^<]+\.whl' | grep -q "${check_file}"; then
            echo "Package ${package} ${version} already exists"
            echo "BUILD=false" >> $GITHUB_ENV
            exit 0
          fi

          full_json=$(curl -sSL "https://pypi.org/pypi/${package}/${version}/json")
          download_url=$(echo "$full_json" | jq -r '.urls[] | select(.packagetype=="sdist").url')
          if [ -z "$download_url" ] || [ ${{ matrix.arch }} != "loongarch64" ]; then
              echo "No source found for package ${package} version ${version}"
              echo "SOURCE=false" >> $GITHUB_ENV
              echo "VERSION=${version}" >> $GITHUB_ENV
              exit 0
          fi
          wget -O - "$download_url" | tar xz --strip-components=1

      - name: checkout
        if: env.SOURCE == 'false'
        uses: actions/checkout@v4
        with:
          repository: python-pillow/Pillow
          ref: ${{ env.VERSION }}

      - name: Setup QEMU
        if: env.BUILD != 'false'
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        if: env.BUILD != 'false'
        uses: loong64/cibuildwheel@v2.23.2
        env:
          CIBW_ARCHS: "${{ matrix.arch }}"
          CIBW_BUILD: "*-${{ matrix.build }}${{ matrix.arch }}"
          CIBW_ENVIRONMENT_PASS_LINUX: PIP_EXTRA_INDEX_URL
          CIBW_SKIP: "pp*"
          CIBW_TEST_SKIP: "*"
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux_2_28_x86_64
          CIBW_MANYLINUX_AARCH64_IMAGE: quay.io/pypa/manylinux_2_28_aarch64
          CIBW_MANYLINUX_PPC64LE_IMAGE: quay.io/pypa/manylinux_2_28_ppc64le
          CIBW_MANYLINUX_S390X_IMAGE: quay.io/pypa/manylinux_2_28_s390x

      - name: Check wheel
        run: |
          ls -al wheelhouse/*.whl || exit 0
          echo "upload=true" >> $GITHUB_ENV

      - name: Upload wheels
        if: env.upload == 'true'
        run: |
          pip install twine==6.0.1
          for file in wheelhouse/*.whl; do
            twine upload --repository-url https://gitlab.com/api/v4/projects/65746188/packages/pypi $file || true
          done
        env:
          TWINE_USERNAME: ${{ github.repository_owner }}
          TWINE_PASSWORD: ${{ secrets.GL_TOKEN }}