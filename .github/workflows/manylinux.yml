name: build (manylinux)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        type: string
        required: true
        default: 'patch_loong64'
      latest:
        description: 'Build latest version'
        type: boolean
        required: true
        default: false

jobs:
  build_matrix:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - id: matrix
        name: build matrix
        shell: python
        run: |
          import os
          import json
          reduced = [
              ("loongarch64", "ubuntu-24.04", ("manylinux_2_38", "musllinux_1_2")),
          ]
          expanded = [{"policy": policy, "platform": platform, "runner": runner} for platform, runner, policies in reduced for policy in policies]
          print(json.dumps(expanded, indent=2))
          with open(os.environ["GITHUB_OUTPUT"], "at") as f:
              f.write(f"matrix={json.dumps(expanded)}")

  build_manylinux:
    name: ${{ matrix.policy }}_${{ matrix.platform }}
    needs: build_matrix
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build_matrix.outputs.matrix) }}
    env:
      POLICY: ${{ matrix.policy }}
      PLATFORM: ${{ matrix.platform }}
      # COMMIT_SHA: ${{ github.sha }}
      LATEST_IMAGE: ${{ github.event.inputs.latest }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: 'loong64/manylinux'
          ref: '${{ github.event.inputs.branch }}'

      - name: Set Environment Variables
        run: |
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: ./build.sh

      - name: Deploy
        run: |
          export TZ=UTC0
          set -x
          TAG="quay.io/pypa/${POLICY}_${PLATFORM}"
          COMMIT_ABBREV_SHA=$(git show -s --format=%h "${COMMIT_SHA}")
          COMMIT_DATE=$(git show -s --format=%cd --date=short "${COMMIT_SHA}")
          BUILD_ID=${COMMIT_DATE}-${COMMIT_ABBREV_SHA}
          if eval "$(git rev-parse --is-shallow-repository)"; then
            git fetch --unshallow
          fi
          BUILD_NUMBER=$(git rev-list "--since=${COMMIT_DATE}T00:00:00Z" --first-parent --count "${COMMIT_SHA}")
          BUILD_ID2=${COMMIT_DATE//-/.}-${BUILD_NUMBER}

          docker tag "${TAG}:${COMMIT_SHA}" "ghcr.io/loong64/${POLICY}_${PLATFORM}:${BUILD_ID}"
          docker tag "${TAG}:${COMMIT_SHA}" "ghcr.io/loong64/${POLICY}_${PLATFORM}:${BUILD_ID2}"
          docker tag "${TAG}:${COMMIT_SHA}" "ghcr.io/loong64/${POLICY}_${PLATFORM}:latest"

          set +x
          docker push "ghcr.io/loong64/${POLICY}_${PLATFORM}:${BUILD_ID}"
          docker push "ghcr.io/loong64/${POLICY}_${PLATFORM}:${BUILD_ID2}"
          if [ "${LATEST_IMAGE}" = "true" ]; then
            docker push "ghcr.io/loong64/${POLICY}_${PLATFORM}:latest"
          fi